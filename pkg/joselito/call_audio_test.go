package joselito

import (
	"reflect"
	"testing"
)

var samplePacket = []byte{0x92, 0x14, 0xc5, 0x03, 0xc0, 0xea, 0xe7, 0xe7, 0xec, 0xe7, 0xe6, 0xef, 0xf5, 0xf0, 0xfb, 0x6f, 0x73, 0x76, 0x70, 0x7b, 0xfa, 0xef, 0xe7, 0xe1, 0xdf, 0xda, 0xd3, 0xd8, 0xd7, 0xd5, 0xd9, 0xe6, 0xed, 0xef, 0x68, 0x62, 0x5f, 0x5c, 0x58, 0x59, 0x58, 0x56, 0x5b, 0x5b, 0x5e, 0x5f, 0x67, 0x6c, 0x6f, 0x7e, 0xfe, 0xf6, 0xf3, 0xee, 0xe9, 0xec, 0xf6, 0xeb, 0xe9, 0xf9, 0xfd, 0xf8, 0x78, 0x6e, 0x6d, 0x69, 0x6f, 0xfd, 0xf9, 0x7b, 0xec, 0xe1, 0xe1, 0xde, 0xdd, 0xe0, 0xdd, 0xda, 0xe2, 0xe8, 0xe4, 0xea, 0x74, 0x6f, 0x6b, 0x6a, 0x67, 0x5d, 0x5e, 0x5e, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x6d, 0x67, 0x79, 0x73, 0x7c, 0xf4, 0xed, 0xf8, 0xf2, 0xe6, 0xe8, 0xed, 0xf0, 0xe7, 0xf0, 0x7a, 0xfb, 0xf1, 0x73, 0x6c, 0x6e, 0x6a, 0x70, 0x76, 0x6a, 0x68, 0xfd, 0xf3, 0x7d, 0x77, 0xee, 0xeb, 0xef, 0xef, 0xf2, 0xe9, 0xe9, 0xf5, 0xf8, 0xf2, 0xf4, 0xf0, 0x74, 0x72, 0x7e, 0x7a, 0x6f, 0x69, 0x78, 0x74, 0x73, 0x67, 0x66, 0x72, 0x7c, 0x74, 0x69, 0xf6, 0xf6, 0xf5, 0xf1, 0xf3, 0xeb, 0xec, 0xe9, 0xee, 0xe8, 0xec, 0xf2, 0xee, 0xfd, 0xf7, 0x75, 0x70, 0x70, 0x6d, 0x72, 0x6a, 0x78, 0x75, 0x6f, 0x7c, 0x70, 0x72, 0x77, 0xfb, 0x7c, 0x78, 0xfd, 0x74, 0xf0, 0xee, 0x7b, 0xf7, 0x7e, 0xf7, 0xec, 0xf9, 0xf3, 0xe7, 0xeb, 0xfd, 0x76, 0x7c, 0x7a, 0x6f, 0x6d, 0x69, 0x66, 0x73, 0x7c, 0x67, 0x73, 0x76, 0x77, 0xfd, 0x6e, 0xf1, 0xe9, 0xec, 0xf4, 0xf4, 0xe8, 0xe3, 0xf1, 0xfd, 0xfe, 0x75, 0xfd, 0x74, 0xf7, 0x76, 0x7d, 0xf7, 0x7c, 0xfd, 0x6b, 0xf9, 0x77, 0x6c, 0x68, 0x64, 0xf8, 0xea, 0xe9, 0xf3, 0xf3, 0xf2, 0x73, 0x63, 0x66, 0xfc, 0x77, 0x75, 0xf3, 0xec, 0xe3, 0xe7, 0xf1, 0xed, 0xe6, 0xec, 0x7b, 0x6c, 0x6f, 0x6e, 0x62, 0x60, 0x60, 0x6a, 0x75, 0xf5, 0xed, 0xea, 0xec, 0xf0, 0xf3, 0xfa, 0xe6, 0xf3, 0x7a, 0x6f, 0x66, 0x69, 0x76, 0xf2, 0xf2, 0xea, 0x76, 0xf7, 0x7d, 0x6d, 0x7b, 0x6a, 0x7a, 0xf6, 0xec, 0xed, 0xeb, 0xff, 0xfe, 0xec, 0x7e, 0xfc, 0x6b, 0x69, 0x68, 0x70, 0xf5, 0xf2, 0xe7, 0xec, 0xf4, 0xfc, 0xee, 0xef, 0x6f, 0x6e, 0x67, 0x67, 0x66, 0x6c, 0xfb, 0xf5, 0xe8, 0xeb, 0xf0, 0xfc, 0x6d, 0x6a, 0x6d, 0xf4, 0xe7, 0xf5, 0xf8, 0xe9, 0xee, 0xed, 0x70, 0x6b, 0xf4, 0x6d, 0x68, 0x6d, 0x72, 0xfd, 0xfc, 0x7d, 0xf7, 0xfa, 0xf9, 0xec, 0xef, 0xfc, 0x77, 0xf0, 0xfd, 0x70, 0x72, 0x74, 0xf5, 0x70, 0x6e, 0x68, 0x6a, 0x71, 0x75, 0xf7, 0xf3, 0xea, 0xef, 0xf3, 0xfc, 0xf0, 0xed, 0x74, 0x75, 0x7b, 0x78, 0xfb, 0xf9, 0x71, 0x7c, 0x6e, 0x79, 0xfd, 0x5e, 0x5f, 0x64, 0x6f, 0xed, 0xdc, 0xd2, 0xcd, 0xcd, 0xcf, 0xd0, 0xd9, 0xe9, 0x62, 0x57, 0x4f, 0x4b, 0x43, 0x42, 0x48, 0x58, 0xe3, 0xcd, 0xbf, 0xb3, 0xa9, 0xab, 0xb7, 0xc7, 0xf9, 0x46, 0x33, 0x2c, 0x2a, 0x2e, 0x38, 0x43, 0x4e, 0xe3, 0xc0, 0xba, 0xbc, 0xc6, 0xd6, 0x69, 0x4e, 0x40, 0x3b, 0x3a, 0x42, 0x50, 0x7d, 0xd2, 0xc3, 0xbc, 0xba, 0xba, 0xbd, 0xc0, 0xca, 0xe6, 0x50, 0x48, 0x3f, 0x3b, 0x35, 0x36, 0x3d, 0x55, 0xd1, 0xbe, 0xb1, 0xa5, 0x9c, 0xa1, 0xae, 0xc1, 0x63, 0x38, 0x28, 0x21, 0x1f, 0x27, 0x2f, 0x3d, 0x4b, 0xce, 0xb7, 0xb1, 0xb6, 0xbf, 0xd6, 0x5a, 0x44, 0x38, 0x32, 0x33, 0x3d, 0x4f, 0xec, 0xc7, 0xbb, 0xb4, 0xb2, 0xb7, 0xba, 0xc3, 0x6b, 0x43, 0x3f, 0x3f, 0x39, 0x2f, 0x2f, 0x38, 0x69, 0xc1, 0xb6, 0xae, 0xa1, 0x9a, 0x9e, 0xab, 0xc0, 0x4e, 0x2f, 0x25, 0x1f, 0x1f, 0x25, 0x2e, 0x3b, 0x4d, 0xcc, 0xb9, 0xb6, 0xba, 0xc2, 0xdd, 0x4c, 0x3c, 0x36, 0x35, 0x3a, 0x48, 0x5c, 0xdc, 0xc4, 0xb9, 0xb6, 0xb7, 0xba, 0xbc, 0xbe, 0xc8, 0xf7, 0x4c, 0x4a, 0x47, 0x3f, 0x36, 0x34, 0x3b, 0x53, 0xce, 0xbd, 0xb2, 0xa6, 0x9c, 0x9f, 0xaa, 0xb9, 0xe6, 0x3b, 0x2a, 0x23, 0x20, 0x25, 0x2d, 0x37, 0x40, 0x69, 0xc4, 0xbd, 0xbf, 0xcc, 0xf0, 0x4c, 0x3f, 0x39, 0x37, 0x3b, 0x4d, 0xef, 0xcf, 0xc4, 0xbc, 0xb9, 0xba, 0xbc, 0xc1, 0xc4, 0xc9, 0xd3, 0x6a, 0x54, 0x51, 0x4d, 0x45, 0x3d, 0x3c, 0x40, 0x5c, 0xcf, 0xbc, 0xaf, 0xa4, 0x9f, 0xa5, 0xad, 0xbb, 0xf9, 0x38, 0x2a, 0x25, 0x25, 0x2a, 0x2f, 0x37, 0x3f, 0x6a, 0xca, 0xc6, 0xd4, 0x6e, 0x4f, 0x43, 0x3d, 0x39, 0x39, 0x42, 0x73, 0xcb, 0xc1, 0xbd, 0xbb, 0xbc, 0xbf, 0xc4, 0xca, 0xcd, 0xce, 0xd6, 0x7b, 0x65, 0x69, 0x67, 0x52, 0x48, 0x44, 0x46, 0x54, 0xdf, 0xc3, 0xbb, 0xb2, 0xa9, 0xa5, 0xaa, 0xb3, 0xc6, 0x56, 0x36, 0x2c, 0x28, 0x27, 0x2b, 0x32, 0x3b, 0x46, 0x6b, 0xd4, 0xd1, 0xe5, 0x63, 0x4d, 0x3f, 0x3a, 0x39, 0x3c, 0x4b, 0xde, 0xc8, 0xc4, 0xbe, 0xba, 0xbb, 0xbe, 0xc8, 0xdc, 0xde, 0xd4, 0xe0, 0xf6, 0x7a, 0x65, 0xf1, 0x6c, 0x54, 0x4e, 0x53, 0x65, 0xe6, 0xca, 0xbf, 0xb2, 0xaa, 0xab, 0xae, 0xb8, 0xc7, 0x5a, 0x3f, 0x35, 0x2f, 0x30, 0x34, 0x39, 0x3b, 0x41, 0x4e, 0x60, 0x5d, 0x61, 0x50, 0x48, 0x47, 0x43, 0x44, 0x4f, 0x5b, 0x72, 0xdc, 0xde, 0xdb, 0xd0, 0xd1, 0xd4, 0xcb, 0xd4, 0xcc, 0xc1, 0xcc, 0xcb, 0xcf, 0xdf, 0x79, 0x6b, 0x4e, 0x49, 0x51, 0x59, 0xee, 0xd2, 0xc6, 0xbd, 0xb8, 0xba, 0xbb, 0xba, 0xbe, 0xc6, 0xd8, 0xee, 0x4f, 0x4b, 0x41, 0x3e, 0x3f, 0x3b, 0x3d, 0x3f, 0x46, 0x46, 0x4a, 0x4f, 0x51, 0x4e, 0x54, 0x5f, 0x52, 0x57, 0x59, 0x4f, 0x63, 0x7a, 0x5a, 0xdd, 0xd3, 0xe8, 0xce, 0xc8, 0xce, 0xd2, 0xca, 0xe5, 0xd8, 0xd7, 0x66, 0xe3, 0xf0, 0x6c, 0x79, 0xdd, 0xef, 0xd4, 0xcc, 0xda, 0xc3, 0xc5, 0xc9, 0xc9, 0xc4, 0xca, 0xd7, 0xd0, 0xea, 0xfb, 0x61, 0x5c, 0x4d, 0x49, 0x4d, 0x46, 0x49, 0x44, 0x49, 0x4d, 0x48, 0x4d, 0x4f, 0x4f, 0x54, 0x57, 0x54, 0x5f, 0x5b, 0x5a, 0x6f, 0x5c, 0x5f, 0xe0, 0xdb, 0xdf, 0xec, 0xd9, 0xce, 0xe7, 0xda, 0xd1, 0xe5, 0x7c, 0x71, 0xdd, 0xe2, 0xe5, 0xed, 0xef, 0xda, 0xed, 0xd0, 0xcc, 0xd8, 0xc7, 0xcc, 0xd5, 0xca, 0xc8, 0xcd, 0xde, 0xdb, 0xde, 0x67, 0x50, 0x57, 0x6a, 0x4d, 0x4b, 0x5a, 0x5a, 0x4c, 0x54, 0x6d, 0x4d, 0x49, 0x4a, 0x49, 0x6e, 0x78, 0x44, 0x4f, 0xdd, 0x6a, 0x62, 0xe9, 0x6d, 0x5e, 0x66, 0x5e, 0xd3, 0xd0, 0x4f, 0xea, 0xc9, 0xde, 0xdd, 0xf0, 0x7e, 0xdb, 0xf3, 0x70, 0xed, 0xd6, 0x71, 0x5e, 0xc7, 0xd9, 0xef, 0xc6, 0xcd, 0xd4, 0xe0, 0xe8, 0xc2, 0xd0, 0x5a, 0xd7, 0x6f, 0xfa, 0xec, 0x4b, 0x78, 0x78, 0x65, 0x62, 0x53, 0x5c, 0x60, 0x56, 0x4d, 0x66, 0x6d, 0x56, 0x51, 0x50, 0x5f, 0x78, 0x69, 0x59, 0x54, 0x6b, 0xe1, 0x6f, 0x56, 0x60, 0xdd, 0xeb, 0x60, 0xde, 0xd7, 0x57, 0x57, 0xc7, 0xd2, 0x58, 0xdf, 0xde, 0xde, 0x6a, 0x59, 0xd0, 0xdd, 0x65, 0xd9}

func TestMessageCallAudioMarshall(t *testing.T) {
	audioSamples := []byte{0xea, 0xe7, 0xe7, 0xec, 0xe7, 0xe6, 0xef, 0xf5, 0xf0, 0xfb, 0x6f, 0x73, 0x76, 0x70, 0x7b, 0xfa, 0xef, 0xe7, 0xe1, 0xdf, 0xda, 0xd3, 0xd8, 0xd7, 0xd5, 0xd9, 0xe6, 0xed, 0xef, 0x68, 0x62, 0x5f, 0x5c, 0x58, 0x59, 0x58, 0x56, 0x5b, 0x5b, 0x5e, 0x5f, 0x67, 0x6c, 0x6f, 0x7e, 0xfe, 0xf6, 0xf3, 0xee, 0xe9, 0xec, 0xf6, 0xeb, 0xe9, 0xf9, 0xfd, 0xf8, 0x78, 0x6e, 0x6d, 0x69, 0x6f, 0xfd, 0xf9, 0x7b, 0xec, 0xe1, 0xe1, 0xde, 0xdd, 0xe0, 0xdd, 0xda, 0xe2, 0xe8, 0xe4, 0xea, 0x74, 0x6f, 0x6b, 0x6a, 0x67, 0x5d, 0x5e, 0x5e, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x6d, 0x67, 0x79, 0x73, 0x7c, 0xf4, 0xed, 0xf8, 0xf2, 0xe6, 0xe8, 0xed, 0xf0, 0xe7, 0xf0, 0x7a, 0xfb, 0xf1, 0x73, 0x6c, 0x6e, 0x6a, 0x70, 0x76, 0x6a, 0x68, 0xfd, 0xf3, 0x7d, 0x77, 0xee, 0xeb, 0xef, 0xef, 0xf2, 0xe9, 0xe9, 0xf5, 0xf8, 0xf2, 0xf4, 0xf0, 0x74, 0x72, 0x7e, 0x7a, 0x6f, 0x69, 0x78, 0x74, 0x73, 0x67, 0x66, 0x72, 0x7c, 0x74, 0x69, 0xf6, 0xf6, 0xf5, 0xf1, 0xf3, 0xeb, 0xec, 0xe9, 0xee, 0xe8, 0xec, 0xf2, 0xee, 0xfd, 0xf7, 0x75, 0x70, 0x70, 0x6d, 0x72, 0x6a, 0x78, 0x75, 0x6f, 0x7c, 0x70, 0x72, 0x77, 0xfb, 0x7c, 0x78, 0xfd, 0x74, 0xf0, 0xee, 0x7b, 0xf7, 0x7e, 0xf7, 0xec, 0xf9, 0xf3, 0xe7, 0xeb, 0xfd, 0x76, 0x7c, 0x7a, 0x6f, 0x6d, 0x69, 0x66, 0x73, 0x7c, 0x67, 0x73, 0x76, 0x77, 0xfd, 0x6e, 0xf1, 0xe9, 0xec, 0xf4, 0xf4, 0xe8, 0xe3, 0xf1, 0xfd, 0xfe, 0x75, 0xfd, 0x74, 0xf7, 0x76, 0x7d, 0xf7, 0x7c, 0xfd, 0x6b, 0xf9, 0x77, 0x6c, 0x68, 0x64, 0xf8, 0xea, 0xe9, 0xf3, 0xf3, 0xf2, 0x73, 0x63, 0x66, 0xfc, 0x77, 0x75, 0xf3, 0xec, 0xe3, 0xe7, 0xf1, 0xed, 0xe6, 0xec, 0x7b, 0x6c, 0x6f, 0x6e, 0x62, 0x60, 0x60, 0x6a, 0x75, 0xf5, 0xed, 0xea, 0xec, 0xf0, 0xf3, 0xfa, 0xe6, 0xf3, 0x7a, 0x6f, 0x66, 0x69, 0x76, 0xf2, 0xf2, 0xea, 0x76, 0xf7, 0x7d, 0x6d, 0x7b, 0x6a, 0x7a, 0xf6, 0xec, 0xed, 0xeb, 0xff, 0xfe, 0xec, 0x7e, 0xfc, 0x6b, 0x69, 0x68, 0x70, 0xf5, 0xf2, 0xe7, 0xec, 0xf4, 0xfc, 0xee, 0xef, 0x6f, 0x6e, 0x67, 0x67, 0x66, 0x6c, 0xfb, 0xf5, 0xe8, 0xeb, 0xf0, 0xfc, 0x6d, 0x6a, 0x6d, 0xf4, 0xe7, 0xf5, 0xf8, 0xe9, 0xee, 0xed, 0x70, 0x6b, 0xf4, 0x6d, 0x68, 0x6d, 0x72, 0xfd, 0xfc, 0x7d, 0xf7, 0xfa, 0xf9, 0xec, 0xef, 0xfc, 0x77, 0xf0, 0xfd, 0x70, 0x72, 0x74, 0xf5, 0x70, 0x6e, 0x68, 0x6a, 0x71, 0x75, 0xf7, 0xf3, 0xea, 0xef, 0xf3, 0xfc, 0xf0, 0xed, 0x74, 0x75, 0x7b, 0x78, 0xfb, 0xf9, 0x71, 0x7c, 0x6e, 0x79, 0xfd, 0x5e, 0x5f, 0x64, 0x6f, 0xed, 0xdc, 0xd2, 0xcd, 0xcd, 0xcf, 0xd0, 0xd9, 0xe9, 0x62, 0x57, 0x4f, 0x4b, 0x43, 0x42, 0x48, 0x58, 0xe3, 0xcd, 0xbf, 0xb3, 0xa9, 0xab, 0xb7, 0xc7, 0xf9, 0x46, 0x33, 0x2c, 0x2a, 0x2e, 0x38, 0x43, 0x4e, 0xe3, 0xc0, 0xba, 0xbc, 0xc6, 0xd6, 0x69, 0x4e, 0x40, 0x3b, 0x3a, 0x42, 0x50, 0x7d, 0xd2, 0xc3, 0xbc, 0xba, 0xba, 0xbd, 0xc0, 0xca, 0xe6, 0x50, 0x48, 0x3f, 0x3b, 0x35, 0x36, 0x3d, 0x55, 0xd1, 0xbe, 0xb1, 0xa5, 0x9c, 0xa1, 0xae, 0xc1, 0x63, 0x38, 0x28, 0x21, 0x1f, 0x27, 0x2f, 0x3d, 0x4b, 0xce, 0xb7, 0xb1, 0xb6, 0xbf, 0xd6, 0x5a, 0x44, 0x38, 0x32, 0x33, 0x3d, 0x4f, 0xec, 0xc7, 0xbb, 0xb4, 0xb2, 0xb7, 0xba, 0xc3, 0x6b, 0x43, 0x3f, 0x3f, 0x39, 0x2f, 0x2f, 0x38, 0x69, 0xc1, 0xb6, 0xae, 0xa1, 0x9a, 0x9e, 0xab, 0xc0, 0x4e, 0x2f, 0x25, 0x1f, 0x1f, 0x25, 0x2e, 0x3b, 0x4d, 0xcc, 0xb9, 0xb6, 0xba, 0xc2, 0xdd, 0x4c, 0x3c, 0x36, 0x35, 0x3a, 0x48, 0x5c, 0xdc, 0xc4, 0xb9, 0xb6, 0xb7, 0xba, 0xbc, 0xbe, 0xc8, 0xf7, 0x4c, 0x4a, 0x47, 0x3f, 0x36, 0x34, 0x3b, 0x53, 0xce, 0xbd, 0xb2, 0xa6, 0x9c, 0x9f, 0xaa, 0xb9, 0xe6, 0x3b, 0x2a, 0x23, 0x20, 0x25, 0x2d, 0x37, 0x40, 0x69, 0xc4, 0xbd, 0xbf, 0xcc, 0xf0, 0x4c, 0x3f, 0x39, 0x37, 0x3b, 0x4d, 0xef, 0xcf, 0xc4, 0xbc, 0xb9, 0xba, 0xbc, 0xc1, 0xc4, 0xc9, 0xd3, 0x6a, 0x54, 0x51, 0x4d, 0x45, 0x3d, 0x3c, 0x40, 0x5c, 0xcf, 0xbc, 0xaf, 0xa4, 0x9f, 0xa5, 0xad, 0xbb, 0xf9, 0x38, 0x2a, 0x25, 0x25, 0x2a, 0x2f, 0x37, 0x3f, 0x6a, 0xca, 0xc6, 0xd4, 0x6e, 0x4f, 0x43, 0x3d, 0x39, 0x39, 0x42, 0x73, 0xcb, 0xc1, 0xbd, 0xbb, 0xbc, 0xbf, 0xc4, 0xca, 0xcd, 0xce, 0xd6, 0x7b, 0x65, 0x69, 0x67, 0x52, 0x48, 0x44, 0x46, 0x54, 0xdf, 0xc3, 0xbb, 0xb2, 0xa9, 0xa5, 0xaa, 0xb3, 0xc6, 0x56, 0x36, 0x2c, 0x28, 0x27, 0x2b, 0x32, 0x3b, 0x46, 0x6b, 0xd4, 0xd1, 0xe5, 0x63, 0x4d, 0x3f, 0x3a, 0x39, 0x3c, 0x4b, 0xde, 0xc8, 0xc4, 0xbe, 0xba, 0xbb, 0xbe, 0xc8, 0xdc, 0xde, 0xd4, 0xe0, 0xf6, 0x7a, 0x65, 0xf1, 0x6c, 0x54, 0x4e, 0x53, 0x65, 0xe6, 0xca, 0xbf, 0xb2, 0xaa, 0xab, 0xae, 0xb8, 0xc7, 0x5a, 0x3f, 0x35, 0x2f, 0x30, 0x34, 0x39, 0x3b, 0x41, 0x4e, 0x60, 0x5d, 0x61, 0x50, 0x48, 0x47, 0x43, 0x44, 0x4f, 0x5b, 0x72, 0xdc, 0xde, 0xdb, 0xd0, 0xd1, 0xd4, 0xcb, 0xd4, 0xcc, 0xc1, 0xcc, 0xcb, 0xcf, 0xdf, 0x79, 0x6b, 0x4e, 0x49, 0x51, 0x59, 0xee, 0xd2, 0xc6, 0xbd, 0xb8, 0xba, 0xbb, 0xba, 0xbe, 0xc6, 0xd8, 0xee, 0x4f, 0x4b, 0x41, 0x3e, 0x3f, 0x3b, 0x3d, 0x3f, 0x46, 0x46, 0x4a, 0x4f, 0x51, 0x4e, 0x54, 0x5f, 0x52, 0x57, 0x59, 0x4f, 0x63, 0x7a, 0x5a, 0xdd, 0xd3, 0xe8, 0xce, 0xc8, 0xce, 0xd2, 0xca, 0xe5, 0xd8, 0xd7, 0x66, 0xe3, 0xf0, 0x6c, 0x79, 0xdd, 0xef, 0xd4, 0xcc, 0xda, 0xc3, 0xc5, 0xc9, 0xc9, 0xc4, 0xca, 0xd7, 0xd0, 0xea, 0xfb, 0x61, 0x5c, 0x4d, 0x49, 0x4d, 0x46, 0x49, 0x44, 0x49, 0x4d, 0x48, 0x4d, 0x4f, 0x4f, 0x54, 0x57, 0x54, 0x5f, 0x5b, 0x5a, 0x6f, 0x5c, 0x5f, 0xe0, 0xdb, 0xdf, 0xec, 0xd9, 0xce, 0xe7, 0xda, 0xd1, 0xe5, 0x7c, 0x71, 0xdd, 0xe2, 0xe5, 0xed, 0xef, 0xda, 0xed, 0xd0, 0xcc, 0xd8, 0xc7, 0xcc, 0xd5, 0xca, 0xc8, 0xcd, 0xde, 0xdb, 0xde, 0x67, 0x50, 0x57, 0x6a, 0x4d, 0x4b, 0x5a, 0x5a, 0x4c, 0x54, 0x6d, 0x4d, 0x49, 0x4a, 0x49, 0x6e, 0x78, 0x44, 0x4f, 0xdd, 0x6a, 0x62, 0xe9, 0x6d, 0x5e, 0x66, 0x5e, 0xd3, 0xd0, 0x4f, 0xea, 0xc9, 0xde, 0xdd, 0xf0, 0x7e, 0xdb, 0xf3, 0x70, 0xed, 0xd6, 0x71, 0x5e, 0xc7, 0xd9, 0xef, 0xc6, 0xcd, 0xd4, 0xe0, 0xe8, 0xc2, 0xd0, 0x5a, 0xd7, 0x6f, 0xfa, 0xec, 0x4b, 0x78, 0x78, 0x65, 0x62, 0x53, 0x5c, 0x60, 0x56, 0x4d, 0x66, 0x6d, 0x56, 0x51, 0x50, 0x5f, 0x78, 0x69, 0x59, 0x54, 0x6b, 0xe1, 0x6f, 0x56, 0x60, 0xdd, 0xeb, 0x60, 0xde, 0xd7, 0x57, 0x57, 0xc7, 0xd2, 0x58, 0xdf, 0xde, 0xde, 0x6a, 0x59, 0xd0, 0xdd, 0x65, 0xd9}
	message := NewMessageCallAudio(audioSamples)

	b, err := message.Marshall()
	if err != nil {
		t.Errorf("marshalling returned error: %v", err)
	}

	if !reflect.DeepEqual(b, samplePacket) {
		t.Errorf("payload doesn't match, expected %v received %v", samplePacket, b)
	}
}

func TestMessageCallAudioUnmarshall(t *testing.T) {
	entity := NewMessageCallAudio(nil)

	err := entity.Unmarshall(samplePacket)
	if err != nil {
		t.Errorf("unmarshalling returned error: %v", err)
	}

	if entity.Type != CALL_AUDIO {
		t.Errorf("unmarshalling expected type to be CALL_DROP, received %d", entity.Type)
	}
}
